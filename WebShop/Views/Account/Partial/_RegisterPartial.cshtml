@using WebShop.Infostructure.Extenssions
@using WebShop.Models.Account
@*@model WebShop.Models.Account.RegisterViewModel*@
@{
    var name = Html.GetName<RegisterViewModel>(m => m.UserName);
    var email = Html.GetName<RegisterViewModel>(m => m.Email);
    var password = Html.GetName<RegisterViewModel>(m => m.Password);
    var confirmPassw = Html.GetName<RegisterViewModel>(m => m.ConfirmPassword);
    var predicate = "{0}&&registerForm.{0}.$invalid";

    var namePredicate = predicate.F(name);
    var emailPredicate = predicate.F(email);
    var pswdPredicate = predicate.F(password);
    var confPswdPredicate = predicate.F(confirmPassw);
}
<form method="POST" class="form-horizontal" role="form" novalidate name="registerForm" id="registerForm">
    <toaster-container toaster-options="{'time-out': 3000, 'close-button':false, 'animation-class': 'toast-top-right'}"></toaster-container>
    @Html.AntiForgeryToken()
    @*Name user*@
    <div class="form-group" ng-init="blurs('@name')">
        @*<label class="col-sm-4 control-label" for="">@Resource.Name</label>*@
        <div class="col-sm-12">
            <input type="text"
                   class="form-control"
                   id="@name"
                   placeholder="@Resource.Name"
                   name="@name"
                   ng-model="user.@name"
                   ng-pattern="/^[A-Za-z]\w{2,20}$/"
                   ng-blur="@name=true"
                   ng-required="true"
                   ng-class="@namePredicate?'custom-invalid':'custom-valid'">
        </div>
        <div class="col-sm-12 errro-input"
             ng-class="@namePredicate?'custom-invalid':'custom-valid'"
             ng-cloak>
            <span ng-show="@namePredicate">@Resource.NameInValid</span>
        </div>
    </div>
    @*Email*@
    <div class="form-group" ng-init="blurs('@email')">
        <div class="col-sm-12">
            <input ng-pattern="/^\w+&#64[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/"
                   class="form-control"
                   id="@email"
                   placeholder="email"
                   name="@email"
                   ng-model="user.@email"
                   ng-required="true"
                   ng-blur="@email=true"
                   ng-class="@emailPredicate?'custom-invalid':''">
        </div>
        <div class="col-sm-12 errro-input"
             ng-class="@emailPredicate?'custom-invalid':'custom-valid'"
             ng-cloak>
            <span ng-show="@emailPredicate">@Resource.EmailInValid</span>
        </div>
    </div>
    @*Password*@
    <div class="form-group" ng-init="blurs('@password')">
        <div class="col-sm-12 ">
            <input type="password"
                   ng-pattern="/^(?=[a-zA-Z])(?=[a-zA-Z0-9]*)(?!.*\s).{6,20}$/"
                   class="form-control"
                   id="@password"
                   placeholder="@Resource.Password"
                   name="@password"
                   ng-model="user.@password"
                   ng-required="true"
                   ng-blur="@password=true"
                   ng-class="@pswdPredicate?'custom-invalid':''">
        </div>
        <div class="col-sm-12 errro-input"
             ng-class="@pswdPredicate?'custom-invalid':'custom-valid'"
             ng-cloak>
            <span ng-show="@pswdPredicate">@Resource.PaswdInValid</span>
        </div>
    </div>
    @*Confirm password*@
    <div class="form-group" ng-init="blurs('@confirmPassw')">
        <div class="col-sm-12">
            <input compare-to source="user.@password"
                   type="password"
                   class="form-control"
                   id="@confirmPassw"
                   placeholder="@Resource.ConfirmPswd"
                   name="@confirmPassw"
                   ng-model="user.@confirmPassw"
                   ng-minlength="6"
                   ng-maxlength="20"
                   ng-required="true"
                   ng-blur="@confirmPassw=true"
                   ng-class="@confPswdPredicate?'custom-invalid':''">
        </div>
        <div class="col-sm-12 errro-input"
             ng-class="@confPswdPredicate?'custom-invalid':'custom-valid'"
             ng-cloak>
            <span ng-show="@confPswdPredicate">@Resource.ConfirmPswdInValid</span>
        </div>
    </div>
    @*<div ng-if="responseHandler.errorMessages.length>0" class="col-md-12 form-group anim-show" ng-cloak>
        <div class="label-error" ng-repeat="mess in responseHandler.errorMessages">
            {{::mess}}
        </div>
    </div>*@
    <div class="form-group">
        <div class="col-sm-12 text-right">
            <button class="btn btn-primary btn-buy" ng-click="submit(registerForm)">@Resource.Register</button>
        </div>
    </div>
    @*ng-disabled="!registerForm.$valid"*@
</form>
